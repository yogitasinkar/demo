{"version":3,"sources":["images/brandnew1.jpeg","pages/header/Header.js","pages/home/Home.js","images/brandnew.jpeg","pages/vision/Vision.jsx","pages/stories/Stories.jsx","images/journey.jpeg","pages/journey/Journey.jsx","images/dam.svg","images/factory.svg","images/recycle1.png","pages/ourActions/Sample.pdf","pages/ourActions/DamModal.jsx","pages/ourActions/FactoryModal.jsx","pages/ourActions/MapComp.jsx","pages/ourActions/waterData.js","pages/ourActions/RenderBarChart.js","pages/ourActions/StateMap.js","pages/ourActions/OurActions.js","pages/reports/Reports.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","Container","NavbarBrand","src","brand","alt","style","width","height","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","Home","slides","autoplay","interval","Vision","logo","fontSize","Stories","Journey","journey","DamModal","selectedDam","setSelectedDam","toggleDam","Modal","toggle","ModalHeader","charCode","ModalBody","city","state","Table","bordered","href","target","rel","File","download","class","FactoryModal","selectedFactory","setSelectedFactory","toggleFactory","mapboxgl","workerClass","MapboxWorker","MapComp","recycleView","viewport","setViewport","latitude","longitude","zoom","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","data","map","item","coordinates","e","preventDefault","type","dam","factory","ID","recycleData","recycle","getRandomUsed","num","Math","floor","random","String","getRandomReplenished","waterData","id","value","used","replenished","getStateData","currentState","result","find","obj","console","log","RenderBarChart","BarChart","XAxis","dataKey","YAxis","Tooltip","cursor","Legend","Bar","stroke","fill","background","isAnimationActive","barSize","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","geographyStyle","default","outline","hover","transition","pressed","StateMap","tooltipContent","setTooltipContent","setCurrentState","onMouseEnter","geo","properties","name","onMouseLeave","Row","Col","xs","projectionConfig","projection","data-tip","geography","geographies","current","s","rsmKey","marginTop","OurActions","setRecycleView","stateView","setStateView","display","justifyContent","marginBottom","ButtonGroup","Button","size","window","location","reload","Reports","sm","Card","body","CardTitle","tag","CardText","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7520fe88.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandnew1.f2456fc2.jpeg\";","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from 'reactstrap';\nimport { Link} from 'react-router-dom';\n\nimport brand from '../../images/brandnew1.jpeg'\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <Container>\n        <NavbarBrand>\n          <img src={brand} alt='coca-cola' style={{width: '200px', height: '100px'}}/>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <Link className='nav-link' to='/' >HOME </Link>\n            </NavItem>\n            <NavItem>\n              <Link className='nav-link' to=\"/vision\">VISION </Link>\n            </NavItem>\n            <NavItem>\n              <Link className='nav-link' to=\"/journey\">JOURNEY </Link>\n            </NavItem>\n            <NavItem>\n              <Link className='nav-link' to=\"/our-actions\">OUR ACTIONS</Link>\n            </NavItem>\n            <NavItem>\n              <Link className='nav-link' to=\"/reports\">REPORTS</Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Container } from 'reactstrap';\nimport {Carousel} from '3d-react-carousal';\n\nconst Home = () => {\n    let slides = [\n        <img  src=\"https://picsum.photos/800/500/?random\" alt=\"1\" />,\n        <img  src=\"https://picsum.photos/800/501/?random\" alt=\"2\" />,\n        <img  src=\"https://picsum.photos/800/502/?random\" alt=\"3\" />, \n        <img  src=\"https://picsum.photos/800/503/?random\" alt=\"4\" /> ,\n        <img src=\"https://picsum.photos/800/504/?random\" alt=\"5\" />  \n    ];\n\n    return (\n        <Container className='my-5'>\n            <h3 className='text-center'>OUR GALLERY</h3>\n            <Carousel slides={slides} autoplay={true} interval={5000}/>\n        </Container>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/brandnew.5c4cc917.jpeg\";","import React from 'react'\nimport { Container } from 'reactstrap';\nimport logo  from '../../images/brandnew.jpeg'\n\nconst Vision = () => {\n    return (\n        <Container className='my-5'>\n            <h3 className='text-center'>VISION</h3>\n            <div className='text-center'>\n                <img src={logo} alt='logo' style={{width: '500px'}}/>\n            </div>\n            <div  className='m-5' style={{fontSize: '20px'}}>\n                <p> Our Vision ...</p>\n            </div>\n        </Container>\n    )\n}\n\nexport default Vision\n","import React from 'react'\nimport { Container } from 'reactstrap';\n\nconst Stories = () => {\n    return (\n        <Container className='my-5'>\n            <h3 className='text-center'>STORIES</h3>\n        </Container>\n    )\n}\n\nexport default Stories\n","export default __webpack_public_path__ + \"static/media/journey.87586cc5.jpeg\";","import React from 'react';\nimport { Container } from 'reactstrap';\nimport journey from '../../images/journey.jpeg'\n\nconst Journey = () => {\n    return (\n        <Container className='my-5'>\n            <h3 className='text-center'>JOURNEY</h3>\n            <div className='text-center my-3'>\n                <img src={journey} alt='journey'/>\n            </div>\n        </Container>\n    )\n}\n\nexport default Journey\n","export default __webpack_public_path__ + \"static/media/dam.5e77a0b0.svg\";","export default __webpack_public_path__ + \"static/media/factory.be3ac821.svg\";","export default __webpack_public_path__ + \"static/media/recycle1.1ac1e6e3.png\";","export default __webpack_public_path__ + \"static/media/Sample.0d425f73.pdf\";","import React from 'react'\nimport {  Modal, ModalHeader, ModalBody, Table } from 'reactstrap';\nimport File from './Sample.pdf'\n\nconst DamModal = ({selectedDam, setSelectedDam}) => {\n    const toggleDam = () => {\n      setSelectedDam(null)\n    }\n    return (\n      <Modal isOpen={selectedDam} toggle={toggleDam} >\n        <ModalHeader toggle={toggleDam} charCode={<strong>X</strong>} >\n          INTERVENTION\n        </ModalHeader>\n        <ModalBody>\n          <p className='text-center'><strong>{selectedDam?.city}, {selectedDam?.state}</strong></p>\n          <Table bordered>\n          <tbody>\n            <tr>\n              <td>Intervention Name</td>\n              <td>Project XYZ</td>\n            </tr>\n            <tr>\n              <td>Timeline</td>\n              <td>2010-2015</td>\n            </tr>\n            <tr>\n              <td>Partner Info</td>\n              <td><a href=\"http://www.dscindia.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Read More</a></td>\n            </tr>\n            <tr>\n              <td>Read Stories</td>\n              <td><a href=\"https://www.coca-colaindia.com/stories/sustainability/water-stewardship/a-check-dam-that-solved-mathura-devis-water-worries-\" target=\"_blank\" rel=\"noopener noreferrer\">Read More</a></td>\n            </tr>\n            <tr>\n              <td>Reports</td>\n              <td><a href={File} download>Download</a></td>\n            </tr>\n            <tr>\n              <td>Media</td>\n              <td>Media</td>\n            </tr>\n            <tr>\n              <td>Sharing Options</td>\n              <td>\n                <i class=\"fa fa-whatsapp share-icon\" style={{color:\"green\"}}></i>\n                <i class=\"fa fa-facebook-f share-icon\" style={{color:\"#4867AB\"}}></i>\n                <i class=\"fa fa-instagram share-icon\" style={{color:\"red\"}}></i>\n                <i class=\"fa fa-twitter share-icon\" style={{color:\"skyblue\"}}></i>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        </ModalBody>\n      </Modal>\n    )\n}\n\nexport default DamModal\n","import React from 'react'\nimport {  Modal, ModalHeader, ModalBody, Table } from 'reactstrap';\n\nconst FactoryModal = ({selectedFactory, setSelectedFactory}) => {\n    const toggleFactory = () => {\n      setSelectedFactory(null)\n    }\n    return (\n      <Modal isOpen={selectedFactory} toggle={toggleFactory} >\n        <ModalHeader toggle={toggleFactory} charCode={<strong>X</strong>} >\n          FACTORY INFO\n        </ModalHeader>\n        <ModalBody>\n          <p className='text-center'><strong>{selectedFactory?.city}, {selectedFactory?.state}</strong></p>\n          <Table bordered>\n          <tbody>\n            <tr>\n              <td>Water Produced</td>\n              <td>100</td>\n            </tr>\n            <tr>\n              <td>Water Consumed</td>\n              <td>70</td>\n            </tr>\n          </tbody>\n        </Table>\n        </ModalBody>\n      </Modal>\n    )\n}\n\nexport default FactoryModal\n","import React, {useState} from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl';\nimport MapboxWorker from 'mapbox-gl/dist/mapbox-gl-csp-worker';\nimport ReactMapGL, {Marker} from 'react-map-gl';\nimport * as data from './data.json';\nimport * as recycleData from './recycleData.json';\nimport dam from '../../images/dam.svg'\nimport factory from '../../images/factory.svg'\nimport recycle from '../../images/recycle1.png'\nimport DamModal from './DamModal';\nimport FactoryModal from './FactoryModal';\nmapboxgl.workerClass = MapboxWorker;\n\n\nfunction MapComp({recycleView}) {\n\n  const [selectedDam, setSelectedDam] = useState(null)\n  const [selectedFactory, setSelectedFactory] = useState(null)\n\n  const [viewport, setViewport] = useState({\n    width: 800,\n    height: 800,\n    latitude: 22.9734,\n    longitude: 80.6569,\n    zoom: 4,\n  });\n\n  return (\n    <>\n      <ReactMapGL\n        {...viewport}\n        mapStyle={'mapbox://styles/yogi42/ckpr8ce280k1g17rx4d4w5koi'}\n        mapboxApiAccessToken={'pk.eyJ1IjoieW9naTQyIiwiYSI6ImNrcHI2eXN4dTAxZ3Iydm8xcmR2NXR1aDcifQ.7zZJrvP2MyWYFeMDrOC8mw'}\n        onViewportChange={nextViewport => setViewport(nextViewport)}\n      >\n       {recycleView===false ? (\n         data.items.map((item)=> (\n          <Marker key={item.ID} longitude={item.coordinates[1]} latitude={item.coordinates[0]}>\n            <button className='marker-button' onClick={(e)=> {\n              e.preventDefault()\n              if(item.type === 'dam'){\n                setSelectedDam(item)\n              } else {\n                setSelectedFactory(item)\n              }\n            }}>\n              {\n                item.type === \"dam\" ? \n                  <img src={dam} alt='Dam' /> :\n                  <img src={factory} alt='Factory' />\n              }\n            </button>\n          </Marker>\n        ))\n      ) : (\n         recycleData.items.map((item)=> (\n          <Marker key={item.ID} longitude={item.coordinates[1]} latitude={item.coordinates[0]}>\n            <button className='marker-button'>\n              {\n                  <img src={recycle} alt='Recycle' /> \n              }\n            </button>\n          </Marker>\n        ))      \n      )\n        }\n      </ReactMapGL>\n      <DamModal selectedDam={selectedDam} setSelectedDam={setSelectedDam}/>\n      <FactoryModal selectedFactory={selectedFactory} setSelectedFactory={setSelectedFactory}/>\n    </>\n  );\n}\n\nexport default MapComp","const getRandomInt = () => {\n    return 22\n}\nconst getRandomUsed = () => {\n    let min = 150;\n    let max = 500;\n    let num = Math.floor(Math.random() * (max - min + 1)) + min;\n    return String(num)\n}\nconst getRandomReplenished = () => {\n    let min = 150;\n    let max = 500;\n    let num = Math.floor(Math.random() * (max - min + 1)) + min;\n    return String(num)\n}\n\nexport const waterData = [\n    { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt(),used: getRandomUsed(), replenished: getRandomReplenished()  },\n    { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'AS', state: 'Assam', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'BR', state: 'Bihar', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'GA', state: 'Goa', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'GJ', state: 'Gujarat', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'HR', state: 'Haryana', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'HP', state: 'Himachal Pradesh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'JH', state: 'Jharkhand', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'KA', state: 'Karnataka', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'KL', state: 'Kerala', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'MH', state: 'Maharashtra', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'MN', state: 'Manipur', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'ML', state: 'Meghalaya', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'MZ', state: 'Mizoram', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'NL', state: 'Nagaland', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'OD', state: 'Odisha', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'PB', state: 'Punjab', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'RJ', state: 'Rajasthan', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'SK', state: 'Sikkim', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'TS', state: 'Telangana', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'TR', state: 'Tripura', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'UK', state: 'Uttarakhand', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'UP', state: 'Uttar Pradesh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'WB', state: 'West Bengal', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'WB', state: 'West Bengal', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'CH', state: 'Chandigarh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'DD', state: 'Daman and Diu', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'DL', state: 'Delhi', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'JK', state: 'Jammu and Kashmir', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'LA', state: 'Ladakh', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'LD', state: 'Lakshadweep', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() },\n    { id: 'PY', state: 'Puducherry', value: getRandomInt() , used: getRandomUsed(), replenished: getRandomReplenished() }\n]\n\nexport const getStateData = (currentState) => {\n    var result = waterData.find(obj => {\n        return obj.id === currentState\n    })\n    console.log(result)\n    return [result]\n}","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, } from 'recharts';\nimport { getStateData } from './waterData'\n\nconst RenderBarChart = ({currentState}) => {\n  return (\n      <BarChart\n          width={400}\n          height={200}\n          data={getStateData(currentState)}\n          >\n          <XAxis type=\"category\" dataKey=\"state\"/>\n          <YAxis type=\"number\"/>\n          <Tooltip cursor={false}/>\n          <Legend />\n          <Bar dataKey=\"used\" stroke=\"#8884d8\" fill=\"#8884d8\" background={{ stroke: '#eee' }} isAnimationActive={true} barSize={40}/>\n          <Bar dataKey=\"replenished\" stroke=\"#82ca9d\" fill=\"#82ca9d\" background={{ stroke: '#eee' }} isAnimationActive={false} barSize={40}/>\n      </BarChart>\n  )\n}\n\nexport default RenderBarChart;","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport ReactTooltip from 'react-tooltip';\nimport RenderBarChart from './RenderBarChart';\nimport { waterData } from './waterData';\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n};\n\n\nconst geographyStyle = {\n  default: {\n    outline: 'none',\n  },\n  hover: {\n    fill: '#be3d26',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n};\n\nfunction StateMap() {\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data,] = useState(waterData);\n  const [currentState, setCurrentState] = useState('GJ')\n\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.name}`);\n      // setCurrentState(geo.id)\n    };\n  };\n\n  const onClick = (geo, current = { value: 'NA' }) => {\n    return () => {\n      // setTooltipContent(`${geo.properties.name}`);\n      setCurrentState(geo.id)\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent('');\n  };\n\n  return (\n    <Container >\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n      <Row>\n      <Col xs=\"8\">\n        <ComposableMap\n            projectionConfig={PROJECTION_CONFIG}\n            projection=\"geoMercator\"\n            width={300}\n            height={200}\n            data-tip=\"\"\n          > \n            <Geographies geography={INDIA_TOPO_JSON}>\n              {({ geographies }) =>\n                geographies.map(geo => {\n                  const current = data.find(s => s.id === geo.id);\n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      fill={geo.id === currentState ? '#be3d26' : '#ff8a75'}\n                      style={geographyStyle}\n                      onMouseEnter={onMouseEnter(geo, current)}\n                      onClick={onClick(geo, current)}\n                      onMouseLeave={onMouseLeave}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          </ComposableMap>\n        </Col>\n      <Col xs=\"4\">\n        <Row style={{marginTop: '80px'}}><RenderBarChart currentState={currentState} /></Row>\n      </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default StateMap;\n","import React, {useState} from 'react'\nimport { Container, Button, ButtonGroup } from 'reactstrap';\nimport MapComp from './MapComp';\nimport StateMap from './StateMap'\n\nconst OurActions = () => {\n\n    const [recycleView, setRecycleView] = useState(false)\n    const [stateView, setStateView] = useState(false)\n    const handleReset = () => {\n        window.location.reload();\n    }\n\n    return (\n        <Container className='my-5'>\n            <div style={{display: 'flex', justifyContent:'center', marginBottom: '10px' }}>\n                <h3>OUR ACTIONS</h3>\n                <ButtonGroup className='mx-3'>\n                    <Button size=\"sm\" color={stateView ? 'muted' : 'primary'} onClick={() => setStateView(!stateView)}>Other View</Button>\n                    <Button size=\"sm\" color={stateView ? 'primary' : 'muted'} onClick={() => setStateView(!stateView)}>State View</Button>\n                </ButtonGroup>  \n            </div>\n            { \n                stateView ? (\n                    <StateMap/>\n                ) : (\n                    <div className='map-comp'>\n                        <div className='d-flex justify-content-between'>\n                            <MapComp recycleView={recycleView}/>\n                            <div>\n                                <br/>           \n                                <button className='btn btn-info m-2 reset-zoom' onClick={handleReset}>Reset Zoom</button>\n                                <br/>\n                                <ButtonGroup className='m-2'>\n                                    <Button color={recycleView ? 'muted' : 'primary'} onClick={() => setRecycleView(!recycleView)}  >Water</Button>\n                                    <Button color={recycleView ? 'primary' : 'muted'} onClick={() => setRecycleView(!recycleView)}  >Waste</Button>\n                                </ButtonGroup>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n        </Container>\n    )\n}\n\nexport default OurActions;","import React from 'react'\nimport { Container } from 'reactstrap';\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\n\n\nconst Reports = () => {\n    return (\n        <Container className='my-5'>\n        <h3 className='text-center'>REPORTS</h3>\n        <Row className='my-5'>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n        </Row>\n        <br/>\n        <Row>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n            <Col sm=\"4\">\n                <Card body>\n                <CardTitle tag=\"h5\">Report Title</CardTitle>\n                <CardText>Report Description</CardText>\n                <Button color=\"info\">Download</Button>\n                </Card>\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default Reports\n","import './App.scss';\nimport Header from './pages/header/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/Home';\nimport Vision from './pages/vision/Vision';\nimport Stories from './pages/stories/Stories';\nimport Journey from './pages/journey/Journey';\nimport OurActions from './pages/ourActions/OurActions';\nimport Reports from './pages/reports/Reports';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Header />\n        <Switch>\n          <Route path='/' component={Home} exact/>\n          <Route path='/vision' component={Vision} />\n          <Route path='/stories' component={Stories} />\n          <Route path='/journey' component={Journey} />\n          <Route path='/our-actions' component={OurActions} />\n          <Route path='/reports' component={Reports} />\n        </Switch>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}